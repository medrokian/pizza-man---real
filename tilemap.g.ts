// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0juhignyiuhgj":
            case "level2":return tiles.createTilemap(hex``, img`
222222222222222222222222
2................2.....2
2................2.....2
2................2.....2
2...2............22....2
2...2..................2
2...2.....2............2
2...2....222...........2
2................2.....2
2................2.....2
2................22....2
2......................2
2......................2
2.........22...........2
2.........22...........2
222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.floorMixed,sprites.dungeon.floorLight2], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0juhignyiuhgj3":
            case "level0juhignyiuhgj1":return tiles.createTilemap(hex`1c`, img`
2222222222222222222222222222
2..........................2
2..........................2
2..........................2
2...................22.....2
2...2................2.....2
2...2......................2
2...2......222222..........2
2...2......222222..........2
2...2......222222..........2
2...2......................2
2..........................2
2..........................2
2..........................2
2...........2..............2
2...........222.......2....2
2..........................2
222........................2
222........................2
2222222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.floorMixed,sprites.dungeon.floorLight2,sprites.dungeon.floorLightMoss], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0juhignyiuhgj0":
            case "level0juhignyiuhgj2":return tiles.createTilemap(hex`1c`, img`
2222222222222222222222222222
222......................222
222......................222
2..........................2
2...................22.....2
2....................2.....2
2...2......................2
2...2......222222..........2
2...2......222222..........2
2...2......222222..........2
2...2......................2
2..........................2
2..........................2
2..........................2
2...........2........2.....2
2...........222............2
2..........................2
222......................222
222......................222
2222222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.floorMixed,sprites.dungeon.floorLight2,sprites.dungeon.floorLightMoss], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
